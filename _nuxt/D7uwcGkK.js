import{Y as g,Z as u,r as D,M as O,P as B,a0 as M,a1 as H,g as R,a2 as p,a3 as E,p as N,l as S,a4 as V,a5 as z}from"./BwgG7AAf.js";function j(e){return Array.isArray(e)?e:[e]}const K=e=>e==="defer"||e===!1;function I(...e){var v;const n=typeof e[e.length-1]=="string"?e.pop():void 0;typeof e[0]!="string"&&e.unshift(n);let[t,d,a={}]=e;if(typeof t!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof d!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const s=g(),P=d,w=()=>u.value,C=()=>s.isHydrating?s.payload.data[t]:s.static.data[t];a.server=a.server??!0,a.default=a.default??w,a.getCachedData=a.getCachedData??C,a.lazy=a.lazy??!1,a.immediate=a.immediate??!0,a.deep=a.deep??u.deep,a.dedupe=a.dedupe??"cancel";const f=a.getCachedData(t,s),h=f!=null;if(!s._asyncData[t]||!a.immediate){(v=s.payload._errors)[t]??(v[t]=u.errorValue);const i=a.deep?D:O;s._asyncData[t]={data:i(h?f:a.default()),pending:D(!h),error:B(s.payload._errors,t),status:D("idle"),_default:a.default}}const r={...s._asyncData[t]};delete r._default,r.refresh=r.execute=(i={})=>{if(s._asyncDataPromises[t]){if(K(i.dedupe??a.dedupe))return s._asyncDataPromises[t];s._asyncDataPromises[t].cancelled=!0}if(i._initial||s.isHydrating&&i._initial!==!1){const c=i._initial?f:a.getCachedData(t,s);if(c!=null)return Promise.resolve(c)}r.pending.value=!0,r.status.value="pending";const l=new Promise((c,o)=>{try{c(P(s))}catch(y){o(y)}}).then(async c=>{if(l.cancelled)return s._asyncDataPromises[t];let o=c;a.transform&&(o=await a.transform(c)),a.pick&&(o=x(o,a.pick)),s.payload.data[t]=o,r.data.value=o,r.error.value=u.errorValue,r.status.value="success"}).catch(c=>{if(l.cancelled)return s._asyncDataPromises[t];r.error.value=E(c),r.data.value=N(a.default()),r.status.value="error"}).finally(()=>{l.cancelled||(r.pending.value=!1,delete s._asyncDataPromises[t])});return s._asyncDataPromises[t]=l,s._asyncDataPromises[t]},r.clear=()=>T(s,t);const _=()=>r.refresh({_initial:!0}),b=a.server!==!1&&s.payload.serverRendered;{const i=S();if(i&&!i._nuxtOnBeforeMountCbs){i._nuxtOnBeforeMountCbs=[];const o=i._nuxtOnBeforeMountCbs;M(()=>{o.forEach(y=>{y()}),o.splice(0,o.length)}),H(()=>o.splice(0,o.length))}b&&s.isHydrating&&(r.error.value||f!=null)?(r.pending.value=!1,r.status.value=r.error.value?"error":"success"):i&&(s.payload.serverRendered&&s.isHydrating||a.lazy)&&a.immediate?i._nuxtOnBeforeMountCbs.push(_):a.immediate&&_();const l=V();if(a.watch){const o=R(a.watch,()=>r.refresh());l&&p(o)}const c=s.hook("app:data:refresh",async o=>{(!o||o.includes(t))&&await r.refresh()});l&&p(c)}const m=Promise.resolve(s._asyncDataPromises[t]).then(()=>r);return Object.assign(m,r),m}async function U(e){await new Promise(t=>z(t));const n=j(e);await g().hooks.callHookParallel("app:data:refresh",n)}function T(e,n){n in e.payload.data&&(e.payload.data[n]=void 0),n in e.payload._errors&&(e.payload._errors[n]=u.errorValue),e._asyncData[n]&&(e._asyncData[n].data.value=void 0,e._asyncData[n].error.value=u.errorValue,e._asyncData[n].pending.value=!1,e._asyncData[n].status.value="idle"),n in e._asyncDataPromises&&(e._asyncDataPromises[n]&&(e._asyncDataPromises[n].cancelled=!0),e._asyncDataPromises[n]=void 0)}function x(e,n){const t={};for(const d of n)t[d]=e[d];return t}export{U as r,I as u};
